# read blast output
read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
# read blast output
HGT.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
head(HGT.blast.out)
paste(HGT.blast.out$V1,":",HGT.blast.out$V10,"-",HGT.blast.out$V11)
paste(HGT.blast.out$V1,":",HGT.blast.out$V10,"-",HGT.blast.out$V11, sep = "")
cat(paste(HGT.blast.out$V1,":",HGT.blast.out$V10,"-",HGT.blast.out$V11, sep = ""))
cat(paste(HGT.blast.out$V1,":",HGT.blast.out$V10,"-",HGT.blast.out$V11, sep = ""),sep = "\n")
cat(paste(HGT.blast.out$V1,":",HGT.blast.out$V10,"-",HGT.blast.out$V11, sep = ""),sep = "\n",file = "filter-fasta.txt")
unique(HGT.blast.out$V1)
# read blast output
Bak.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
Anm.blast.out <- read.delim("../output/animal-blast-out.txt", as.is = T, header = F)
Anm.blast.out$V1
Bak.blast.out$V1
Bak.blast.out$V7
paste(Bak.blast.out$V1,":",Bak.blast.out$V7,"-",Bak.blast.out$V8, sep = "")
Bak.blast.out$V1 <- paste(Bak.blast.out$V1,":",Bak.blast.out$V7,"-",Bak.blast.out$V8, sep = "")
Anm.blast.out$V1 %in% Bak.blast.out$V1[1]
Anm.blast.out$V1 %in% Bak.blast.out$V1[2]
Anm.blast.out$V1 %in% Bak.blast.out$V1[3]
for(i in 1:nrow(Bak.blast.out)){
print(Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[3]])
}
for(i in 1:nrow(Bak.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[i]])
if(sum(evalue > Bak.blast.out$V11[i]) > 1){
print(Bak.blast.out$V1[i])
}
}
for(i in 1:nrow(Bak.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[i]])
if(sum(evalue < Bak.blast.out$V11[i]) > 1){
print(Bak.blast.out$V1[i])
}
}
Bak.blast.out$V11[i]
evalue
evalue > 5.45e-41
if(sum(evalue < Bak.blast.out$V11[i]) >= 1){
print(Bak.blast.out$V1[i])
}
for(i in 1:nrow(Bak.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[i]])
if(sum(evalue < Bak.blast.out$V11[i]) == 1){
print(Bak.blast.out$V1[i])
}
}
for(i in 1:nrow(Bak.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[i]])
if(sum(evalue < Bak.blast.out$V11[i]) => 1){
for(i in 1:nrow(Bak.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bak.blast.out$V1[i]])
if(sum(evalue < Bak.blast.out$V11[i]) >= 1){
print(Bak.blast.out$V1[i])
}
}
evalue < Bak.blast.out$V11[i]
sum(evalue < Bak.blast.out$V11[i])
View(Bak.blast.out)
read.delim("../output/augustus.hints.gtf", as.is = T, header = T)
braker.gff <- read.delim("../output/augustus.hints.gtf", as.is = T, header = T)
head(braker.gff)
braker.gff <- read.delim("../output/augustus.hints.gtf", as.is = T, header = F)
braker.gff$V1
braker.gff <- read.delim("../output/augustus.hints.gtf", as.is = T, header = F,skip = #)
which(braker.gff$V1 %in% "#")
head(braker.gff)
# read blast output
Bac.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
Anm.blast.out <- read.delim("../output/animal-blast-out.txt", as.is = T, header = F)
Bac.blast.out$V1 <- paste(Bac.blast.out$V1,":",Bac.blast.out$V7,"-",Bac.blast.out$V8, sep = "")
contig.list <- c()
for(i in 1:nrow(Bac.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bac.blast.out$V1[i]])
if(sum(evalue < Bac.blast.out$V11[i]) >= 1){
contig.list <- c(contig.list,Bac.blast.out$V1[i])
}
}
# read gff
read.delim("../input/augustus.hints.gtf", header = F, as.is = T)
# read gff
augustus.gff <- read.delim("../input/augustus.hints.gtf", header = F, as.is = T)
augustus.gff[augustus.gff$V1 == contig.list[1],]
augustus.gff$V1
contig.list[1]
strsplit(x = contig.list[1],split = "-")
strsplit(x = contig.list[1],split = ":")
strsplit(x = contig.list[1],split = ":")[[1]]
strsplit(x = contig.list[1],split = ":")[[1]][2]
strsplit(x = contig.list[1],split = ":")[[1]][1]
augustus.gff[augustus.gff$V1 == strsplit(x = contig.list[1],split = ":")[[1]][1],]
foo <- augustus.gff[augustus.gff$V1 == strsplit(x = contig.list[1],split = ":")[[1]][1],]
foo$V4
strsplit(strsplit(x = contig.list[1],split = ":")[[1]][2],split = "-")
range <- as.numeric(unlist(strsplit(strsplit(x = contig.list[1],split = ":")[[1]][2],split = "-")))
range
foo$V4 <= range[1]
foo$V4 >= range[1]
foo$V4 <= range[2]
foo$V4 >= range[1] | foo$V4 <= range[2]
contig <- strsplit(x = contig.list[1],split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = contig.list[1],split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
foo$V4 >= range[1] | foo$V4 <= range[2]
foo$V4 >= range[1] & foo$V4 <= range[2]
foo[foo$V4 >= range[1] & foo$V4 <= range[2],]
View(foo)
foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
foo$V5
foo$V5 <= range[2]
foo$V4 >= range[1]
target <- contig.list[1]
target <- contig.list[2]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
target <- contig.list[3]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
}
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
print(foo[foo$V4 >= range[1] & foo$V5 <= range[2],])
}
nrow(foo[foo$V4 >= range[1] & foo$V5 <= range[2],])
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
x <- foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
if(nrow(x) >= 1){
print(x)
}
}
View(foo)
# read blast output
Bac.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
Anm.blast.out <- read.delim("../output/animal-blast-out.txt", as.is = T, header = F)
Bac.blast.out$V1 <- paste(Bac.blast.out$V1,":",Bac.blast.out$V7,"-",Bac.blast.out$V8, sep = "")
contig.list <- c()
for(i in 1:nrow(Bac.blast.out)){
evalue <- (Anm.blast.out$V11[Anm.blast.out$V1 %in% Bac.blast.out$V1[i]])
if(sum(evalue > Bac.blast.out$V11[i]) >= 1){
contig.list <- c(contig.list,Bac.blast.out$V1[i])
}
}
#write(contig.list,file = "potential-hits.txt")
# read gff
augustus.gff <- read.delim("../input/augustus.hints.gtf", header = F, as.is = T)
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
x <- foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
if(nrow(x) >= 1){
print(x)
}
}
# read blast output
Bac.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
# read blast output
Bac.blast.out <- read.delim("../output/bacteria-blast-out.txt", as.is = T, header = F)
Anm.blast.out <- read.delim("../output/animal-blast-out.txt", as.is = T, header = F)
colnames(Bac.blast.out)
colnames(Bac.blast.out) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore", "qcovs", "qcovhsp")
colnames(Bac.blast.out)
colnames(Anm.blast.out) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore", "qcovs", "qcovhsp")
Anm.blast.out$qseqid
head(Anm.blast.out$qseqid)
View(Bac.blast.out)
# change bacteria blast qseqid to match with animal blast qseqid
Bac.blast.out$qseqid <- paste(Bac.blast.out$qseqid,":",Bac.blast.out$qstart,"-",Bac.blast.out$qend, sep = "")
Bac.blast.out$qseqid
1e-1
1e-10
1e-2
1e-3
1e-4
1e-5
1e-1 > 1e-2
1e-1
1e-2
1e-1 < 1e-2
# get the list of contigs that have a lower evalue than bacterial blast
contig.list <- c()
for(i in 1:nrow(Bac.blast.out)){
evalue <- (Anm.blast.out$evalue[Anm.blast.out$qseqid %in% Bac.blast.out$qseqid[i]])
if(sum(evalue < Bac.blast.out$evalue[i]) >= 1){
contig.list <- c(contig.list,Bac.blast.out$V1[i])
}
}
evalue
Bac.blast.out$evalue
Bac.blast.out$evalue[i]
Bac.blast.out$evalue[i] > 1
Bac.blast.out$evalue[i] < 1
Bac.blast.out$evalue[i] < 1.51e-07
Bac.blast.out$evalue[i] > 1.51e-07
sum(evalue < Bac.blast.out$evalue[i])
# get the list of contigs that have a lower evalue than bacterial blast
contig.list <- c()
for(i in 1:nrow(Bac.blast.out)){
evalue <- (Anm.blast.out$evalue[Anm.blast.out$qseqid %in% Bac.blast.out$qseqid[i]])
if(sum(evalue < Bac.blast.out$evalue[i]) >= 1){
contig.list <- c(contig.list,Bac.blast.out$qseqid[i])
}
}
write(contig.list,file = "potential-hits.txt")
unique(contig.list)
# get all unique matches
contig.list <- unique(contig.list)
write(contig.list,file = "potential-hits.txt")
# read gff
augustus.gff <- read.delim("../input/augustus.hints.gtf", header = F, as.is = T)
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
x <- foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
if(nrow(x) >= 1){
print(x)
}
}
contig.list
contig
range
foo
# missing contigs
Anm.blast.out$qseqid %in% Bac.blast.out$qseqid
# missing contigs
sum(Anm.blast.out$qseqid %in% Bac.blast.out$qseqid)
# missing contigs
sum(Bac.blast.out$qseqid %in% Anm.blast.out$qseqid)
# missing contigs
Bac.blast.out$qseqid %in% Anm.blast.out$qseqid
# missing contigs
Bac.blast.out$qseqid[Bac.blast.out$qseqid %in% Anm.blast.out$qseqid]
# missing contigs
Bac.blast.out$qseqid[!(Bac.blast.out$qseqid %in% Anm.blast.out$qseqid)]
# missing contigs
contig.list <- Bac.blast.out$qseqid[!(Bac.blast.out$qseqid %in% Anm.blast.out$qseqid)]
# read gff
augustus.gff <- read.delim("../input/augustus.hints.gtf", header = F, as.is = T)
for(i in 1:length(contig.list)){
target <- contig.list[i]
contig <- strsplit(x = target,split = ":")[[1]][1]
range <- as.numeric(unlist(strsplit(strsplit(x = target,split = ":")[[1]][2],split = "-")))
foo <- augustus.gff[augustus.gff$V1 == contig,]
x <- foo[foo$V4 >= range[1] & foo$V5 <= range[2],]
if(nrow(x) >= 1){
print(x)
}
}
contig.list
unique(contig.list)
